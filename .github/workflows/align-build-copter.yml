name: align build copter

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'
    branches:
      - dev

concurrency:
  group: ci-${{github.workflow}}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-copter:
    runs-on: ubuntu-22.04
    container: ardupilot/ardupilot-dev-chibios:v0.1.3
    strategy:
      fail-fast: false  # don't cancel if a job from the matrix fails
      matrix:
        copter: [
            AP6-M460,
            AP6-M460-A10,
            AP6-M490,
            AP6-M490-A10,
            AP6-M6T22,
            AP6-M4T12,
            AP6-M4P,
            AP6-M450,
            AP6-M450-no-gps,
            AP6-M450-OF,
            AP6-M450-A10-OF,
            AP6-M450-A10,
            AP6-SoH,
            AP6m-M3,
            AP6m-M3-A10,
            AP6m-M3-OF,
        ]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      
      - name: align build
        shell: bash
        run: |
          git config --global --add safe.directory ${GITHUB_WORKSPACE}
          PATH="/usr/lib/ccache:/opt/gcc-arm-none-eabi-10/bin:$PATH"
          PATH="/github/home/.local/bin:$PATH"
          python3 Tools/scripts/align_params_modifier.py
          ./waf configure --board ${{matrix.copter}}
          ./waf clean
          ./waf copter
          cp build/${{matrix.copter}}/bin/arducopter.apj ${{matrix.copter}}.apj

      - name: upload apj
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.copter}}
          path: ${{matrix.copter}}.apj

  build-heli:
    runs-on: ubuntu-22.04
    container: ardupilot/ardupilot-dev-chibios:v0.1.3
    strategy:
      fail-fast: false  # don't cancel if a job from the matrix fails
      matrix:
        heli: [
            AP6-E1,
            AP6-E1v2,
            AP6-E2,
        ]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      
      - name: align build
        shell: bash
        run: |
          git config --global --add safe.directory ${GITHUB_WORKSPACE}
          PATH="/usr/lib/ccache:/opt/gcc-arm-none-eabi-10/bin:$PATH"
          PATH="/github/home/.local/bin:$PATH"
          python3 Tools/scripts/align_params_modifier.py
          ./waf configure --board ${{matrix.heli}}
          ./waf clean
          ./waf heli
          cp build/${{matrix.heli}}/bin/arducopter-heli.apj ${{matrix.heli}}.apj

      - name: upload apj
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.heli}}
          path: ${{matrix.heli}}.apj
  
  release:
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    needs: [build-copter, build-heli]

    steps:
      - name: checkout for release
        if: github.ref_type == 'tag'
        uses: actions/checkout@v4

      - name: create align-build dir
        run: mkdir -p align-build

      - name: download apj
        uses: actions/download-artifact@v4
        with:
          path: align-build

      - name: upload align-build
        uses: actions/upload-artifact@v4
        with:
          name: align-build-copter
          path: align-build

      - name: create release
        if: github.ref_type == 'tag'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          zip -r align-build.zip align-build
          gh release create ${{ github.ref_name }} \
            --title "Release ${{ github.ref_name }}" \
            --notes "Automated release for ${{ github.ref_name }}" \
            align-build/*/*.apj \
            align-build.zip

      - name: cleanup
        if: always()
        run: |
          rm -rf align-build
