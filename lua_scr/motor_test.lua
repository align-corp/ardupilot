-- Servo output sequence script
-- Sets servo output according to a vector, cycling through elements every 100ms

-- Configuration parameters
local SERVO_FUNCTION = 94 -- Script 1 (94-99 for Script 1-6)

-- Vector of PWM values to cycle through
local pwm_values = { 1000, 1256, 1262, 1267, 1272, 1278, 1283, 1289, 1294, 1299, 1305, 1310, 1380, 1375, 1360, 1359, 1359, 1372, 1455, 1520, 1550, 1570, 1587, 1617, 1585, 1589, 1605, 1601, 1589, 1619, 1617, 1601, 1623, 1607, 1595, 1582, 1572, 1562, 1576, 1591, 1587, 1583, 1585, 1576, 1572, 1587, 1596, 1605, 1585, 1634, 1591, 1533, 1642, 1606, 1557, 1552, 1561, 1563, 1561, 1579, 1564, 1576, 1584, 1577, 1574, 1589, 1585, 1573, 1580, 1584, 1588, 1584, 1579, 1583, 1580, 1584, 1594, 1583, 1580, 1584, 1580, 1582, 1583, 1576, 1576, 1576, 1580, 1578, 1570, 1585, 1578, 1580, 1569, 1583, 1582, 1574, 1572, 1584, 1588, 1582, 1583, 1582, 1583, 1590, 1594, 1595, 1587, 1591, 1588, 1591, 1592, 1588, 1591, 1597, 1597, 1594, 1598, 1599, 1599, 1599, 1599, 1597, 1599, 1601, 1600, 1598, 1597, 1593, 1595, 1593, 1582, 1587, 1592, 1594, 1592, 1594, 1592, 1593, 1600, 1602, 1602, 1598, 1602, 1599, 1595, 1597, 1594, 1592, 1588, 1591, 1592, 1590, 1588, 1588, 1590, 1590, 1586, 1588, 1587, 1583, 1585, 1587, 1590, 1584, 1584, 1584, 1584, 1586, 1591, 1594, 1586, 1593, 1586, 1586, 1584, 1586, 1584, 1589, 1587, 1590, 1592, 1595, 1591, 1588, 1591, 1591, 1586, 1591, 1591, 1588, 1588, 1590, 1591, 1590, 1592, 1593, 1594, 1595, 1595, 1594, 1597, 1596, 1595, 1596, 1603, 1600, 1595, 1596, 1595, 1594, 1592, 1591, 1591, 1591, 1588, 1588, 1590, 1588, 1588, 1588, 1593, 1593, 1588, 1592, 1593, 1597, 1595, 1596, 1599, 1595, 1596, 1592, 1594, 1599, 1597, 1591, 1593, 1589, 1591, 1586, 1587, 1589, 1583, 1587, 1594, 1588, 1593, 1591, 1591, 1594, 1595, 1591, 1592, 1592, 1591, 1584, 1589, 1590, 1586, 1586, 1594, 1591, 1595, 1592, 1594, 1598, 1599, 1596, 1604, 1603, 1604, 1594, 1598, 1601, 1593, 1593, 1594, 1587, 1589, 1593, 1596, 1592, 1595, 1597, 1595, 1595, 1596, 1599, 1608, 1600, 1600, 1599, 1600, 1590, 1592, 1595, 1589, 1587, 1591, 1588, 1587, 1590, 1592, 1599, 1592, 1590, 1599, 1596, 1592, 1591, 1588, 1595, 1586, 1593, 1595, 1596, 1602, 1608, 1601, 1598, 1602, 1599, 1592, 1587, 1587, 1585, 1579, 1578, 1584, 1581, 1580, 1586, 1592, 1583, 1597, 1596, 1590, 1598, 1598, 1596, 1597, 1599, 1598, 1592, 1597, 1599, 1593, 1594, 1590, 1585, 1579, 1582, 1587, 1589, 1581, 1590, 1582, 1586, 1582, 1588, 1591, 1596, 1592, 1592, 1600, 1598, 1598, 1601, 1595, 1594, 1599, 1591, 1588, 1590, 1580, 1590, 1579, 1585, 1589, 1579, 1573, 1593, 1598, 1590, 1599, 1600, 1606, 1595, 1596, 1594, 1603, 1604, 1592, 1598, 1602, 1592, 1597, 1595, 1596, 1594, 1595, 1595, 1592, 1594, 1594, 1590, 1591, 1594, 1592, 1597, 1594, 1596, 1588, 1592, 1590, 1587, 1583, 1584, 1594, 1589, 1587, 1593, 1586, 1580, 1589, 1585, 1590, 1592, 1589, 1589, 1585, 1577, 1584, 1593, 1592, 1582, 1576, 1583, 1581, 1589, 1578 }
local current_index = 1

function init()
    -- set patameter ARMING_REQUIRE to 1
    param:set_and_save("ARMING_REQUIRE", 1)
    SRV_Channels:set_output_pwm(SERVO_FUNCTION, 1000)
    return check_armed, 1000
end

function check_armed()
    if not arming:is_armed() then
        return check_armed, 1000
    end

    -- if vehicles is armed, start motor test
    gcs:send_text(0, string.format("WARNING: in 5 seconds motors will turn"))
    gcs:send_text(0, string.format("Disarm to stop motors"))
    return update, 5000
end


function update()
    if not arming:is_armed() then
        SRV_Channels:set_output_pwm(SERVO_FUNCTION, 1000)
        return check_armed, 100
    end

    -- Get the current PWM value from the vector
    local pwm = pwm_values[current_index]

    -- Set the servo output with timeout (100ms + buffer)
    SRV_Channels:set_output_pwm(SERVO_FUNCTION, pwm)

    -- Move to next index, wrap around to beginning if at the end
    current_index = current_index + 1
    if current_index > #pwm_values then
        current_index = 12
    end

    return update, 100 -- Schedule next update in 100ms
end

return init()
